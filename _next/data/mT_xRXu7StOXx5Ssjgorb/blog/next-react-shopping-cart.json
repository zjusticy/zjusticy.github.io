{"pageProps":{"title":"A shopping cart project using Nextjs and React Hook for e-commerce","date":"2020-08-2T21:20:16.173Z","description":"A simple and elegant shopping cart component that can be easily integrated in e-commerce project, using Nextjs, Hook and Typescript","slug":"next-react-shopping-cart","content":"<p><strong><a href=\"https://next-shopping-cart.vercel.app\">DEMO</a></strong></p>\n<p>This project is based on <a href=\"https://github.com/sivadass/react-shopping-cart\">react-shopping-cart</a>, which is a web shopping cart using react and sass. However, in this fast-chaning world, this react-shopping cart is outdated. We will refactore this project using Nextjs, react hook and typescript.</p>\n<p>You can check the code of this project on <a href=\"https://github.com/zjusticy/next-shopping-cart\">Github</a>.</p>\n<p><img src=\"/img/next-react-shopping-cart.gif\" alt=\"\"></p>\n<h2>Next.js</h2>\n<p>Next.js is a lightweight React server-side rendering application framework. With it, we can simply and easily implement React server-side rendering, thus speeding up the first screen, and also doing SEO. Now Next.js is more powerful that can combine server-side rendering (SSR) and static site generation (SSG) to provide a more fluid experience. You can check more about Next.js <a href=\"https://nextjs.org/docs/getting-started\">here</a>.</p>\n<p>Since we only have one single page, the file structure for page folder:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">project\n├── index.tsx\n└── _app.tsx <span class=\"token comment\"># add head section</span>\n</code></pre>\n<p>We also use SSG to get a better performance. Also, Because static site does not rely on Web Server, deployment is just to put the generated web page on the CDN. Data are fetched by build in function \"getStaticProps“.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> getStaticProps<span class=\"token operator\">:</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">GetStaticProps</span></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span>\n    <span class=\"token string\">\"https://res.cloudinary.com/sivadass/raw/upload/v1535817394/json/products.json\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> products<span class=\"token operator\">:</span> data <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Its time to first byte (TTFB) performance is the best.</p>\n<h2>Hook</h2>\n<p>Hook is a new feature of React 16.8. It allows you to use state and other React features without writing a class. Comparing to higher order component, it can be more elegant and efficient.</p>\n<p>Below we have a state <code>isAdded</code> to indicate a product has successfully added to the cart.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  isAdded<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Change to the hook:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isAdded<span class=\"token punctuation\">,</span> setAddState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState <span class=\"token operator\">&#x3C;</span> boolean <span class=\"token operator\">></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Moreover, we can customise our own hooks. Below is some code from the original project to determine the position of the click:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">handleClickOutside</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cartNode <span class=\"token operator\">=</span> <span class=\"token function\">findDOMNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">refs</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">cartPreview</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> buttonNode <span class=\"token operator\">=</span> <span class=\"token function\">findDOMNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">refs</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">cartButton</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>cartNode<span class=\"token punctuation\">.</span><span class=\"token property-access\">classList</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>cartNode <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cartNode<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">contains</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        showCart<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      event<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">handleClickOutside</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">removeEventListener</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">handleClickOutside</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>To make the code more reusable, we implement the same function by hook:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> useClickOutside <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token function-variable function\">closeModel</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">,</span>\n  ref<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">RefObject</span></span><span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">HTMLDivElement</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// whether to check if the component active or not</span>\n  activeCheck<span class=\"token operator\">:</span> boolean\n<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span>  <span class=\"token function-variable function\">handleClickOutside</span>  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span>  <span class=\"token maybe-class-name\">MouseEvent</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>ref <span class=\"token operator\">&#x26;&#x26;</span> ref<span class=\"token punctuation\">.</span><span class=\"token property-access\">current</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">!</span>ref<span class=\"token punctuation\">.</span><span class=\"token property-access\">current</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">contains</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span> <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">Element</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>activeCheck<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      e<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">closeModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// add when mounted</span>\n    <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> handleClickOutside<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// return function to be called when unmounted</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> handleClickOutside<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> useClickOutside<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>We also put some states: <code>cart</code>, <code>totalItems</code> and <code>totalAmount</code> to the context which enable a more organized global state management. After this, we can use <code>useContext</code> hook inside the pages or components to introduce the needed state or function.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> cart<span class=\"token punctuation\">,</span> totalItems<span class=\"token punctuation\">,</span> totalAmount<span class=\"token punctuation\">,</span> removeProduct<span class=\"token punctuation\">,</span> bounce<span class=\"token punctuation\">,</span> bouceEnd <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span>\n  useContext <span class=\"token operator\">&#x3C;</span> <span class=\"token maybe-class-name\">Init</span> <span class=\"token operator\">></span> <span class=\"token maybe-class-name\">CartContext</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2>Typescript</h2>\n<p><a href=\"https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html\">Typescript</a> is a strongly typed version of JavaScript. Then the type and unique syntax are removed during the compile time to generate pure JavaScript code. Since it is still JavaScript running in the browser in the end, TypeScript does not depend on the support of the browser, nor does it cause compatibility issues.</p>\n<p>TypeScript increases the readability and maintainability of the code.</p>\n<h2>Height fixed when the image is not loaded</h2>\n<p>The width of some pictures is determined, and the height is adaptive. When the picture is not loaded, the height is 0. After the loading is completed, its height is stretched, which will cause the page to flicker and jitter during this process. But there is no way to control the height. If the width and height of the picture are inconsistent, and the width setting is the same, the height will be uneven.</p>\n<p>At this time, you can use padding to control the height of the picture, so that the pictures in the list are forced to set the same height. Take the setting on Amazon as an example. The height of the img-box is opened with padding-top/padding-bottom.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token selector\"><span class=\"token class\">.img-box</span></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token selector\"><span class=\"token class\">.img</span></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">max-height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img-box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>img</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./images/melon.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>The result is illustrated by the image below. Although the three images of pan have different heights, they all have the image boxes that have the same height and width. The image itself is centered by setting the margin to auto.</p>\n<p><img src=\"/img/amazonPic.png\" alt=\"Settings on Amazon website\"></p>\n<h2>Reference</h2>\n<p><a href=\"https://github.com/sivadass/react-shopping-cart\">react-shopping-cart</a></p>"},"__N_SSG":true}